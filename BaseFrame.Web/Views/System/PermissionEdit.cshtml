@using BaseFrame.Core.Enums;
@model SuncerePermission
@{
    Layout = "~/Views/Shared/_FormLayout.cshtml";
    List<SuncerePermission> modules = ViewData["SuncerePermissions"] as List<SuncerePermission>;
    Dictionary<int, string> dic = new Dictionary<int, string>();
    dic.Add((int)PermissionType.Module, LanguageHelper.L("Module"));
    dic.Add((int)PermissionType.Page, LanguageHelper.L("Page"));
}

<form action="/System/PermissionEdit" method="post" class="form form-horizontal" id="form">
    @Html.AntiForgeryToken()
    @Html.Hidden("Id", Model.Id)
    <div class="row cl">
        <label class="form-label col-xs-4 col-sm-3"><span class="c-red">*</span>@LanguageHelper.L("Name")：</label>
        <div class="formControls col-xs-8 col-sm-9">
            @Html.TextBox("Name", Model.Name, new { @class = "input-text", @placeholder = LanguageHelper.L("Name") })
        </div>
    </div>
    <div class="row cl">
        <label class="form-label col-xs-4 col-sm-3"><span class="c-red">*</span>@LanguageHelper.L("Type")：</label>
        <div class="formControls col-xs-8 col-sm-9">
            @Html.TextBox("Type", dic[Model.Type], new { @class = "input-text", @readonly = "readonly" })
        </div>
    </div>
    @if (Model.Type == 1)
    {
        <div class="row cl">
            <label class="form-label col-xs-4 col-sm-3"><span class="c-red">*</span>@LanguageHelper.L("Module")：</label>
            <div class="formControls col-xs-8 col-sm-9">
                <span class="select-box">
                    @Html.DropDownList("ParentId", new SelectList(modules, "Id", "Name", Model.ParentId), new { @class = "select" })
                </span>
            </div>
        </div>
    }
    <div class="row cl">
        <label class="form-label col-xs-4 col-sm-3"><span class="c-red">*</span>@LanguageHelper.L("Controller")：</label>
        <div class="formControls col-xs-8 col-sm-9">
            @Html.TextBox("Controller", Model.Controller, new { @class = "input-text", @placeholder = LanguageHelper.L("Controller") })
        </div>
    </div>
    @if (Model.Type == 1)
    {
        <div class="row cl">
            <label class="form-label col-xs-4 col-sm-3"><span class="c-red">*</span>@LanguageHelper.L("Action")：</label>
            <div class="formControls col-xs-8 col-sm-9">
                @Html.TextBox("Action", Model.Action, new { @class = "input-text", @placeholder = LanguageHelper.L("Action") })
            </div>
        </div>
    }
    <div class="row cl">
        <label class="form-label col-xs-4 col-sm-3"><span class="c-red">*</span>@LanguageHelper.L("Order")：</label>
        <div class="formControls col-xs-8 col-sm-9">
            @Html.TextBox("Order", Model.Order, new { @class = "input-text", @placeholder = LanguageHelper.L("Order") })
        </div>
    </div>
    <div class="row cl">
        <label class="form-label col-xs-4 col-sm-3">@LanguageHelper.L("Remark")：</label>
        <div class="formControls col-xs-8 col-sm-9">
            <textarea name="Remark" class="textarea" placeholder="说点什么...256个字符以内" dragonfly="true" onKeyUp="$(this).Huitextarealength({ maxlength: 256 })">@Model.Remark</textarea>
            <p class="textarea-numberbar"><em class="textarea-length">0</em>/256</p>
        </div>
    </div>
    <div class="row cl">
        <div class="col-xs-8 col-sm-9 col-xs-offset-4 col-sm-offset-3">
            <input class="btn btn-primary radius" type="submit" value="&nbsp;&nbsp;提交&nbsp;&nbsp;">
        </div>
    </div>
</form>

@section scripts{
    <script type="text/javascript">
        $(function () {
            $("#form").validate({
                rules: {
                    Name: {
                        required: true,
                        minlength: 2,
                        maxlength: 128
                    },
                    Type: {
                        required: true,
                    },
                    ParentId: {
                        required: function () {
                            $("#Type").val() == 1;
                        }
                    },
                    Controller: {
                        required: true,
                        minlength: 2,
                        maxlength: 128
                    },
                    Action: {
                        required: function () {
                            $("#Type").val() == 1;
                        },
                        minlength: 2,
                        maxlength: 128
                    },
                    Order: {
                        digits: true,
                        range: [0, 100]
                    },
                    Remark: {
                        maxlength: 256
                    }
                },
                onkeyup: false,
                focusCleanup: true,
                success: "valid",
                submitHandler: function (form) {
                    $(form).ajaxSubmit({
                        success: function (result) {
                            layer.msg(result.Message, { icon: result.Status ? 1 : 2, time: 1000 }, function () {
                                var index = parent.layer.getFrameIndex(window.name);
                                parent.location.replace(parent.location.href);
                                parent.layer.close(index);
                            });
                        }
                    });
                }
            });
        });
    </script>
}